{"version":3,"file":"components-ConnectWalletButton-ConnectWalletButton-stories.6190bbbc.iframe.bundle.js","mappings":";;;;;;;;AAaA;AAIA;;;;;;AAMA;;;;;;;;;;AAUA;;;;AAIA;AACA;;;;;AAKA;AACA;AACA;;AAIA;;;;AAMA;;;;;;;;;;;AAcA;AACA;;;AAGA;;;;;;;AASA;;;;;;;;;AAYA;;AAEA;;;;AAIA;AACA;;;AAKA;;;;;;;;;;;;;;;AAiBA;AACA;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;ACrIA;AAGA;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;AASA;;;;;;;AASA;;;;;;;;;;;;;;;AAeA","sources":["webpack://@cardano-foundation/cardano-connect-with-wallet/./src/components/ConnectWalletButton/StyledButtonElements.tsx","webpack://@cardano-foundation/cardano-connect-with-wallet/./src/components/ModalDialog/StyledDialogElements.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { MenuItemStyle, ButtonStyle, DesktopMenuItemStyle } from '../../types';\n\nexport const Menu = styled.div`\n  display: none;\n  position: absolute;\n  margin-top: 8px;\n  font-family: sans-serif;\n  width: 100%;\n  overflow: hidden;\n  z-index: 10;\n`;\n\nexport const MenuItem = styled('span').withConfig({\n  shouldForwardProp: (prop) =>\n    !['primaryColor', 'primaryColorLight', 'borderRadius'].includes(prop),\n})<MenuItemStyle>`\n  color: ${(props) => props.primaryColor};\n  padding: 12px 16px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-color: ${(props) => props.primaryColor};\n  border-style: solid;\n  border-width: 1px;\n  border-bottom: none;\n  background-color: white;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: ${(props) => props.primaryColorLight};\n  }\n\n  &:first-child {\n    border-top-left-radius: ${(props) => `${props.borderRadius}px;`}\n    border-top-right-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom: none;\n  }\n\n  &:last-child {\n    border-bottom-left-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom-right-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom: 1px solid ${(props) => props.primaryColor};\n  }\n`;\n\nexport const MenuItemIcon = styled.img`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\nexport const Button = styled('button').withConfig({\n  shouldForwardProp: (prop) =>\n    !['primaryColor', 'customCSS', 'borderRadius'].includes(prop),\n})<ButtonStyle>`\n  padding: 16px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border: 1px solid ${(props) => props.primaryColor};\n  color: ${(props) => props.primaryColor};\n  background-color: white;\n\n  ${(props) => props.borderRadius && `border-radius: ${props.borderRadius}px;`}\n\n  &:disabled {\n    border: 1px solid #333;\n    color: #333;\n    backgroundcolor: #eee;\n  }\n`;\n\nexport const Dropdown = styled('div').withConfig({\n  shouldForwardProp: (prop) =>\n    !['primaryColor', 'customCSS', 'borderRadius'].includes(prop),\n})<ButtonStyle>`\n  min-width: 180px;\n  max-width: 240px;\n  font-weight: bold;\n  position: relative;\n  display: inline-block;\n  padding-bottom: 8px;\n  padding-top: 8px;\n\n  ${(props) => props.customCSS}\n\n  &:hover ${Menu} {\n    display: block;\n  }\n\n  &:hover ${Button} {\n    background-color: ${(props) => props.primaryColor};\n    color: white;\n  }\n`;\n\nexport const DesktopMenuItem = styled('span').withConfig({\n  shouldForwardProp: (prop) => !['borderRadius'].includes(prop),\n})<DesktopMenuItemStyle>`\n  color: #333;\n  position: relative;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  border-color: #333;\n  border-style: solid;\n  border-width: 1px;\n  border-bottom: none;\n  background-color: #e3e3e3;\n  overflow: hidden;\n\n  &:first-child {\n    border-top-left-radius: ${(props) => `${props.borderRadius}px;`}\n    border-top-right-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom: none;\n  }\n\n  &:last-child {\n    border-bottom-left-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom-right-radius: ${(props) => `${props.borderRadius}px;`}\n    border-bottom: 1px solid #333;\n  }\n\n  & > span {\n    text-transform: uppercase;\n    font-size: 0.5rem;\n    position: absolute;\n    right: 0;\n    width: 100%;\n    padding: 3px;\n    background: #777;\n    color: #fff;\n    text-align: center;\n    transform: rotate(-35deg);\n    translate: 25%;\n  }\n\n  & ${MenuItemIcon} {\n    filter: brightness(0);\n  }\n`;\n","import { CopyInputContainerProps, CustomStyle } from 'src/types';\nimport styled, { keyframes } from 'styled-components';\n\nexport const Modal = styled('div').withConfig({\n  shouldForwardProp: (prop) => !['customCSS'].includes(prop),\n})<CustomStyle>`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.4);\n  ${(props) => props.customCSS}\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #aeaeae;\n  border-radius: 9px;\n  width: fit-content;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CopyInputContainer = styled('div').withConfig({\n  shouldForwardProp: (prop) => !['primaryColor'].includes(prop),\n})<CopyInputContainerProps>`\n  display: flex;\n  align-items: center;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  margin-top: 10px;\n  padding: 10px;\n  width: 95%;\n  max-width: 300px;\n\n  & > input {\n    flex: 1;\n    border: none;\n    outline: none;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  & > button {\n    background-color: ${(props) => props.primaryColor};\n    border-radius: 3px;\n    color: white;\n    border: none;\n    padding: 6px 10px;\n    cursor: pointer;\n  }\n`;\n\nconst fadeInOut = keyframes`\n  0%, 100% {\n    opacity: 0;\n  }\n  10%, 90% {\n    opacity: 1;\n  }\n`;\n\nexport const Toast = styled.div`\n  visibility: hidden;\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  border-radius: 5px;\n  padding: 10px;\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1;\n\n  &.show {\n    visibility: visible;\n    animation: ${fadeInOut} 3s ease;\n  }\n`;\n"],"names":[],"sourceRoot":""}